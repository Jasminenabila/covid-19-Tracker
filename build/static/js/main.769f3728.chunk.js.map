{"version":3,"sources":["Components/Card/Card.module.css","Components/Card/Card.jsx","api/index.js","Components/Graph/Graph.jsx","Components/CityPicker/CityPicker.jsx","Components/Header/Header.jsx","Components/SideCard/SideCard.jsx","App.js","serviceWorker.js","index.js","Components/Graph/Graph.module.css","assets/virus.png","assets/icon.png","assets/smile.png","assets/death.png"],"names":["module","exports","useStyles","makeStyles","root","borderRadius","spacing","textAlign","display","justifyContent","alignItems","infected","color","fontWeight","recovered","death","CardData","data","Styles","className","styles","container","Grid","justify","style","width","item","xs","md","cx","card","Card","raised","CardContent","Typography","text","variant","component","start","end","jumlahKasus","duration","separator","subText","sembuh","content","meninggal","url","fetchData","province","a","changeUrl","axios","get","dailyData","Graph","provinsi","useState","DailyData","setDaily","useEffect","getData","graph","perawatan","labels","map","e","Date","tanggal","toDateString","datasets","label","fill","lineTension","backgroundColor","borderColor","borderDashOffset","borderJoinStyle","pointBackgroundColor","pointHoverRadius","pointHoverBackgroundColor","pointHoverBorderColor","pointHoverBorderWidth","pointRadius","pointHitRadius","jumlahKasusKumulatif","borderCapStyle","borderDash","pointBorderColor","jumlahPasienMeninggal","jumlahPasienSembuh","options","legend","title","form","margin","CityPicker","handleCity","city","setCity","selected","setSelected","Province","getProvince","FormControl","NativeSelect","defaultValue","onChange","event","target","value","i","key","medium","height","marginRight","flexDirection","Header","styled","Avatar","src","virus","fontSize","dataContainer","dataText","marginLeft","dataTitle","dataSubTitle","judulHari","paddingBottom","borderBottom","update","icon1","icon2","SideCard","NewUpdate","setDate","Case","setCase","lastUpdate","length","CardMedia","image","IconVirus","jumlahKasusBaruperHari","smile","jumlahKasusSembuhperHari","jumlahKasusMeninggalperHari","App","setData","proiviceData","find","newObjData","kasusPosi","kasusSemb","kasusMeni","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.769f3728.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Card_container__3Does\",\"card\":\"Card_card__2rSoN\",\"text\":\"Card_text__YnHWy\",\"subText\":\"Card_subText__1u6cM\",\"jumlahKasus\":\"Card_jumlahKasus__cLs4Q\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport cx from \"classnames\";\nimport CountUp from \"react-countup\";\nimport styles from \"./Card.module.css\";\n\nconst useStyles = makeStyles(({ spacing }) => ({\n  root: {\n    borderRadius: spacing(2),\n    textAlign: \"center\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"flex-end\",\n  },\n  infected: {\n    color:\"#54093a\",\n    fontWeight:'bold'\n    // background:\n    //   \"linear-gradient(180deg, rgba(121,9,54,1) 15%, rgba(2,0,36,1) 100%);\",\n  },\n  recovered: {\n    color:\"#3fe075\",\n    fontWeight:'bold'\n    // background:\n    //   \"linear-gradient(180deg, rgba(119,184,76,1) 15%, rgba(10,66,32,1) 100%);\",\n  },\n  death: {\n    color:'#d45648',\n    fontWeight:'bold'\n    // background:\n    //   \"linear-gradient(180deg, rgba(255,0,41,1) 15%, rgba(116,12,29,1) 100%);\",\n  },\n}));\n\nexport default function CardData({ data }) {\n  const Styles = useStyles();\n\n  if (!data) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify=\"center\" style={{ width: \"100%\" }}>\n        <Grid item xs={12} md={3} className={cx(styles.card)}>\n          <Card className={Styles.root} raised={true}>\n            <CardContent>\n              <Typography className={styles.text}>Jumlah Kasus</Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                <CountUp\n                  className={Styles.infected}\n                  start={0}\n                  end={data.jumlahKasus}\n                  duration={2.75}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography className={styles.subText}>\n                Jumlah Kasus Positif terinfeksi COVID-19\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={3} className={cx(styles.card)}>\n          <Card className={cx(Styles.root)} raised={true}>\n            <CardContent>\n              <Typography className={styles.text}>Sembuh</Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                <CountUp\n                  className={Styles.recovered}\n                  start={0}\n                  end={data.sembuh}\n                  duration={2.75}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography className={styles.subText}>\n                Jumlah Kasus Sembuh Dari COVID-19\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n        <Grid item xs={12} md={3} className={cx(styles.card)}>\n          <Card className={cx(Styles.root)} raised={true}>\n            <CardContent className={styles.content}>\n              <Typography className={styles.text}>Meninggal</Typography>\n              <Typography variant=\"h5\" component=\"h2\">\n                <CountUp\n                  className={Styles.death}\n                  start={0}\n                  end={data.meninggal}\n                  duration={2.75}\n                  separator=\",\"\n                />\n              </Typography>\n              <Typography className={styles.subText}>\n                Jumlah Kasus Meninggal Oleh COVID-19\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","import axios from 'axios';\n\n\nconst url = 'https://indonesia-covid-19.mathdro.id/api'\n\nexport const fetchData = async (province) => {\n\n    let changeUrl = url\n\n    if(province){\n        changeUrl = `https://indonesia-covid-19.mathdro.id/api/provinsi`\n    }\n\n    try {\n        const data = await axios.get(changeUrl)\n        return data\n    } catch (error) {\n        return error\n    }\n}\n \nexport const dailyData = async () => {\n\n    try{\n        const { data } = await axios.get(`${url}/harian`)\n        return data \n    } catch (error){\n        return error\n    }\n\n}\n\nexport const province = async () =>{\n    try {\n        const { data } = await axios.get('https://indonesia-covid-19.mathdro.id/api/provinsi')\n        return data\n    } catch (error) {\n        return error\n    }\n}\n","import React, { useEffect, useState } from \"react\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport { dailyData } from \"../../api\";\nimport styles from \"./Graph.module.css\";\n\nexport default function Graph({ provinsi }) {\n  const [DailyData, setDaily] = useState(null);\n \n  useEffect(() => {\n    async function getData() {\n      const { data } = await dailyData();\n      setDaily(data);\n    }\n    getData();\n  }, []);\n\n  if (!DailyData || provinsi == null) {\n    return \"Loading...\";\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.graph}>\n        {\n        provinsi.perawatan ? \n        <Line\n          data={{\n            labels: DailyData.map((e) => new Date(e.tanggal).toDateString()),\n            datasets: [\n              {\n                label: \"Jumlah Kasus \",\n                fill: false,\n                lineTension: 0.2,\n                backgroundColor: \"rgba(75,192,192,0.4)\",\n                borderColor: \"#740c5f\",\n                borderDashOffset: 0.1,\n                borderJoinStyle: \"miter\",\n                pointBackgroundColor: \"#fff\",\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"#740c5f\",\n                pointHoverBorderColor: \"rgba(220,220,220,1)\",\n                pointHoverBorderWidth: 0.1,\n                pointRadius: 0,\n                pointHitRadius: 10,\n                data: DailyData.map((e) => e.jumlahKasusKumulatif),\n              },\n              {\n                label: \"Jumlah Pasien Meninggal \",\n                fill: false,\n                lineTension: 0.2,\n                backgroundColor: \"#ff0029\",\n                borderColor: \"#ff0029\",\n                borderCapStyle: \"butt\",\n                borderDash: [],\n                borderDashOffset: 0.1,\n                borderJoinStyle: \"miter\",\n                pointBorderColor: \"#ff0029\",\n                pointBackgroundColor: \"#fff\",\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"#ff0029\",\n                pointHoverBorderColor: \"#ff0029\",\n                pointHoverBorderWidth: 0.1,\n                pointRadius: 0,\n                pointHitRadius: 10,\n                data: DailyData.map((e) => e.jumlahPasienMeninggal),\n              },\n              {\n                label: \"Jumlah Pasien Sembuh\",\n                fill: false,\n                lineTension: 0.2,\n                backgroundColor: \"#14a82b\",\n                borderColor: \"#14a82b\",\n                borderCapStyle: \"butt\",\n                borderDash: [],\n                borderDashOffset: 0.1,\n                borderJoinStyle: \"miter\",\n                pointBorderColor: \"#14a82b\",\n                pointBackgroundColor: \"#fff\",\n                pointHoverRadius: 5,\n                pointHoverBackgroundColor: \"#14a82b\",\n                pointHoverBorderColor: \"#14a82b\",\n                pointHoverBorderWidth: 0.1,\n                pointRadius: 0,\n                pointHitRadius: 10,\n                data: DailyData.map((e) => e.jumlahPasienSembuh),\n              },\n            ],\n          }}\n        />\n        :\n        <Bar\n          data={{\n            labels: [\"Jumlah Kasus\", \"Sembuh\", \"Meninggal\"],\n            datasets: [\n              {\n                label: \"People\",\n                backgroundColor: [\n                  \"rgba(0, 0, 255, 0.5)\",\n                  \"rgba(0, 255, 0, 0.5)\",\n                  \"rgba(255, 0, 0, 0.5)\",\n                ],\n                data: [provinsi.jumlahKasus,provinsi.sembuh,provinsi.meninggal],\n              },\n            ],\n          }}\n          options={{\n            legend: { display: false},\n            title:{ display: true, text:' Data di Provinsi'}\n          }}\n        />\n      }\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { FormControl, NativeSelect  } from \"@material-ui/core\";\n\nimport { province } from \"../../api\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(()=>({\n  form:{\n    width:'30vw',\n    margin:'10px'\n  }\n}))\n\nexport default function CityPicker({ handleCity }) {\n  const [city, setCity] = useState(\"\");\n  const [selected,setSelected]=useState('Semua')\n  const styles = useStyles()\n\n\n  useEffect(() => {\n    async function getProvince() {\n      const Province = await province();\n      setCity(Province);\n    }\n    getProvince();\n  }, []);\n\n  const handleChange = (event) => {\n    setSelected(event.target.value);\n    handleCity(event.target.value)\n  };\n\n  if(!city){\n      return \"...loading\"\n  }\n\n  return (\n    <div className={styles.container}>\n      <FormControl className={styles.form} >\n        <NativeSelect defaultValue={selected} onChange={handleChange}>\n          <option value={'Semua'}>Semua Provinsi</option>\n      { city.data.map((city,i)=> <option key={i} value={city.provinsi}>{city.provinsi}</option> )}\n        </NativeSelect>\n      </FormControl>\n    </div>\n  );\n}\n","import React from 'react'\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar } from '@material-ui/core'\nimport virus from '../../assets/virus.png'\n\n\nconst useStyles = makeStyles(({spacing})=> ({\n    container: {\n        display:\"flex\",\n        justifyContent:\"start\",\n        alignItems:'center',\n        margin: '2px 10vw 2px'\n    },\n    medium:{\n        height: spacing(7),\n        width: spacing(7),\n        marginRight: spacing(2)\n    },\n    title:{\n        display:'flex',\n        flexDirection:'column',\n        textAlign:'start'\n    }\n}))\n\nexport default function Header(){\n    const styled = useStyles()\n\n    return(\n        <div className={styled.container}>\n            <Avatar src={virus} className={styled.medium}/>\n            <div className={styled.title}>\n            <span style={{ fontSize:30}}>CORONA VIRUS</span>\n            <span style={{ color: '#8c8c8c'}}> Indonesia</span>\n            </div>\n        </div>\n    )\n}","import React, { useState, useEffect } from \"react\";\nimport { Card, CardContent, Typography, CardMedia } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport {  dailyData  } from '../../api/index'\nimport IconVirus from \"../../assets/icon.png\"\nimport smile from \"../../assets/smile.png\"\nimport death from \"../../assets/death.png\"\n\nconst useStyles = makeStyles(() => ({\n  container: {\n    display: \"flex\",\n    justifyContent: \"start\",\n    margin: \"50px 5px\",\n  },\n  root: {\n    width: \"80%\",\n    borderRadius: \"20px\",\n    textAlign: \"left\",\n  },\n  dataContainer:{\n    display:'flex',\n    margin:'10px 5px'\n  },\n  dataText:{\n    marginLeft:30,\n    display:\"flex\",\n    flexDirection:'column',\n    justifyContent:\"start\"\n  },\n  dataTitle:{\n    color:'#696969',\n    fontSize:18\n  },\n  dataSubTitle:{\n    fontSize:27,\n    fontWeight:\"bold\",\n    color:'#999999'\n  },\n  title:{\n      color:'#696969',\n      marginLeft:10\n  },\n  judulHari:{\n    color: '#696969',\n    paddingBottom:10,\n    borderBottom:'1px solid grey',\n    textAlign:'center'\n  },\n  update:{\n      backgroundColor:\"red\",\n      width:'40%',\n      textAlign:'center',\n      borderRadius:10,\n      color:'#ebe8e8',\n      fontWeight:'bold'\n  },\n  icon1:{\n      height:'5vw',\n      width:'5vw',\n      marginLeft:20,\n      backgroundColor:\"grey\",\n      borderRadius:10\n  },\n  icon2:{\n      height:\"5vw\",\n      width:'5vw',\n      marginLeft:20,\n      borderRadius:10\n  }\n}));\n\nexport default function SideCard() {\n  const styles = useStyles();\n  const [NewUpdate,setDate]= useState()\n  const [Case,setCase]=useState()\n  \n  useEffect(()=>{\n    async function getData(){\n        const { data } = await dailyData()\n        const lastUpdate = data[data.length-2]\n        setDate(new Date(lastUpdate.tanggal).toDateString())\n        setCase(lastUpdate)\n    }\n    getData()\n  },[])\n\n  if(!Case){\n      return \"...Loading\"\n  }\n\n  return (\n    <div className={styles.container}>\n      <Card className={styles.root} raised={true}>\n        <CardContent >\n          <Typography className={styles.update}>Last Update </Typography>\n          <Typography className={styles.title}>\n            {NewUpdate}\n          </Typography>\n        </CardContent>\n        <CardContent>\n            <Typography className={styles.judulHari}>UPDATE PER HARI</Typography>\n        </CardContent>\n          <div className={styles.dataContainer}>\n            <CardMedia\n            className={styles.icon1}\n            image={IconVirus}\n            />\n            <div className={styles.dataText}>\n            <Typography className={styles.dataTitle}>Positif</Typography>\n            <Typography className={styles.dataSubTitle}>{Case.jumlahKasusBaruperHari}</Typography>\n            </div>\n            </div>\n            <div className={styles.dataContainer}>\n            <CardMedia\n            className={styles.icon2}\n            image={smile}\n            />\n            <div className={styles.dataText}>\n            <Typography className={styles.dataTitle}>Sembuh</Typography>\n            <Typography className={styles.dataSubTitle}>{Case.jumlahKasusSembuhperHari}</Typography>\n            </div>\n            </div>\n            <div className={styles.dataContainer}>\n            <CardMedia\n            className={styles.icon2}\n            image={death}\n            />\n            <div className={styles.dataText}>\n            <Typography className={styles.dataTitle}>Meninggal</Typography>\n            <Typography className={styles.dataSubTitle}>{Case.jumlahKasusMeninggalperHari}</Typography>\n            </div>\n            </div>\n        \n      </Card>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\n\nimport \"./App.css\";\nimport Cards from \"./Components/Card/Card\";\nimport Graph from \"./Components/Graph/Graph\";\nimport CityPicker from \"./Components/CityPicker/CityPicker\";\nimport Header from \"./Components/Header/Header\"\nimport SideCard from \"./Components/SideCard/SideCard\"\n\nimport { fetchData, province } from \"./api/\";\nimport { Grid } from \"@material-ui/core\";\n\nfunction App() {\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    async function getData() {\n      const { data } = await fetchData();\n      setData(data);\n    }\n    getData();\n  }, []);\n\n  const handleCity = async (city) => {\n    if (city === \"Semua\") {\n      try {\n        const { data } = await fetchData();\n        setData(data);\n      } catch (error) {\n        return error;\n      }\n    } else {\n      try {\n        const { data } = await province();\n        const proiviceData = data.find((e) => e.provinsi === city);\n        const newObjData = {\n          jumlahKasus: proiviceData.kasusPosi,\n          sembuh: proiviceData.kasusSemb,\n          meninggal: proiviceData.kasusMeni,\n        };\n        setData(newObjData);\n      } catch (error) {\n        return error;\n      }\n    }\n  };\n\n  \n  return (\n    <div className=\"App\">\n      <Header/>\n      <Grid container style={{ width: \"100%\" }}>\n        <Grid item xs={12} md={8}>\n      <Cards data={data} />\n      <CityPicker handleCity={handleCity} />\n      <Graph provinsi={data} />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <SideCard />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Graph_container__kyhDg\",\"graph\":\"Graph_graph__sKb9m\"};","module.exports = __webpack_public_path__ + \"static/media/virus.572c50c6.png\";","module.exports = __webpack_public_path__ + \"static/media/icon.d5a6d592.png\";","module.exports = __webpack_public_path__ + \"static/media/smile.715f4eb5.png\";","module.exports = __webpack_public_path__ + \"static/media/death.865c5ff5.png\";"],"sourceRoot":""}